name: test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

#      - name: Create Kind Cluster
#        uses: helm/kind-action@v1

      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@latest

      - name: Create test PVCs and PODs
        run: |
          kubectl apply -f test/1-pvc.yaml
          kubectl apply -f test/1-pod.yaml
          kubectl delete -f test/1-pod.yaml
          kubectl apply -f test/2-pvc.yaml
          kubectl apply -f test/2-pod.yaml
          kubectl apply -f test/3-pvc.yaml
          kubectl apply -f test/3-pod.yaml
          kubectl delete -f test/3-pod.yaml
          kubectl apply -f test/4-pvc.yaml
          kubectl apply -f test/4-pod.yaml

      - name: Install SSHFS
        uses: awalsh128/cache-apt-pkgs-action@latest
        with: 
          packages: sshfs openssh-client libfuse3-3

      - name: Build pv-mounter
        run: make bin

      - name: Create mountpoint
        run: mkdir foo

      - name: Check state of test objects again
        run: |
         kubectl get pod 
         kubectl get pvc
         kubectl get storageclass
         kubectl get storageclass standard -o yaml

      - name: Unmounted PVC with RWO access mode test
        run: |
          ./bin/pv-mounter mount default pvc-1 foo
          touch foo/bar
          ls -l foo/bar
          ./bin/pv-mounter clean default pvc-1 foo
      - name: Mounted PVC with RWO access mode test
        run: |
          ./bin/pv-mounter mount default pvc-2 foo
          touch foo/bar
          ls -l foo/bar
          ./bin/pv-mounter clean default pvc-2 foo
      - name: Unmounted PVC with RWO access mode (NEEDS_ROOT) test
        run: |
          ./bin/pv-mounter mount --needs-root default pvc-3 foo
          touch foo/bar
          ls -l foo/bar
          ./bin/pv-mounter clean default pvc-3 foo
      - name: Mounted PVC with RWO access mode (NEEDS_ROOT) test
        run: |
          ./bin/pv-mounter mount --needs-root default pvc-4 foo
          touch foo/bar
          ls -l foo/bar
          ./bin/pv-mounter clean default pvc-4 foo
 
      - name: Delete PODs and PVCs
        run: |
          kubectl delete -f test/2-pod.yaml --force --grace-period=0
          kubectl delete -f test/1-pvc.yaml --force --grace-period=0
          kubectl delete -f test/2-pvc.yaml --force --grace-period=0
          kubectl delete -f test/4-pod.yaml --force --grace-period=0
          kubectl delete -f test/3-pvc.yaml --force --grace-period=0
          kubectl delete -f test/4-pvc.yaml --force --grace-period=0


